# AI Provider Configuration
# Choose your AI provider: openai, anthropic, or google
AI_PROVIDER=openai

# Choose your AI personality: apollo, sage, or trader, or your own
AI_PERSONALITY=apollo

# API Keys for different providers (uncomment and fill the one you're using)
OPENAI_API_KEY=sk-your-openai-key-here
# ANTHROPIC_API_KEY=sk-ant-your-anthropic-key-here
# GOOGLE_API_KEY=your-google-palm-key-here
# GROK_API_KEY=your-grok-api-key-here
# DEEPSEEK_API_KEY=your-deepseek-api-key-here

# Optional Database Configuration
DB_PATH=./apollo_memory.db

# Optional: Debug Mode
# DEBUG=true 


# API URLs
DASHBOARD_API_URL= # Your trending tokens API URL

# HIVE Mind Configuration
# Enable or disable HIVE collaborative intelligence
ENABLE_HIVE=false

# WebSocket port for HIVE P2P communication
HIVE_PORT=3000

# Comma-separated list of known HIVE peers (WebSocket URLs)
# Leave empty to use auto-discovery or random matchmaking
HIVE_KNOWN_PEERS=ws://localhost:3001,ws://localhost:3002

# Maximum wait time (ms) for HIVE peer responses
HIVE_TIMEOUT=5000

# Categories to share with HIVE peers (comma-separated)
# Options: market_events,tokens,concepts
HIVE_SHARE_CATEGORIES=market_events,tokens,concepts

# Auto-discovery and peer matchmaking settings
# Enable automatic peer discovery and matchmaking
HIVE_AUTO_DISCOVERY=true

# URL of the HIVE discovery server (if using central discovery)
HIVE_DISCOVERY_SERVER=ws://discovery.example.com:8080

# Prefer to connect to random peers when no specific peer is required
HIVE_PREFER_RANDOM=true

# Prefer peers with complementary knowledge (recommended for diverse insights)
HIVE_PREFER_COMPLEMENTARY=true

# Maximum number of peers to connect to through auto-discovery
HIVE_MAX_PEERS=3

# Discovery Server Configuration (used when running a discovery server)
# Port to run the discovery server on (for hosting your own discovery server)
DISCOVERY_PORT=8080

# Matchmaking interval in milliseconds (how often to process the queue)
MATCHMAKING_INTERVAL=5000

# Maximum peers per client (limit how many peers can be suggested)
MAX_PEERS_PER_CLIENT=5

